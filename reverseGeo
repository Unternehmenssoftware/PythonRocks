#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Dec  1 10:46:11 2017

@author: benjamin-wuthe
"""
import pandas as pd
import requests
import pprint
pp =pprint.PrettyPrinter(indent=4)

reader = pd.read_excel("vbb-haltestellen-entwicklertag.xlsx") # Liste der Haltestellen 
apiKeyGoogle = 'AIzaSyA23uzWBRzUtoY2LCvehnS_YcLfgrsQF1M'
apiKeyGoogle2 = 'AIzaSyC5PyGNYr_HOOCpa9I8Tp3GLeMjpwYaxro'
df = pd.DataFrame(reader[:])
df=df.drop(['lat','lon','KOORDINATE_X','KOORDINATE_Y'],axis=1)

splitter = ','
liZipCode = []
liAdress = []
liBezirk=[]
liBezirkSub=[]
counter = 1

def apiKeyChanger(i):
# Funktion wechselt den ApiKey bei jeder Anfrage, da auf 2.500 pro Key begrenzt
# Haltestellen aber >2.900
    if (i % 2 == 0):
        return apiKeyGoogle
    else:
        return apiKeyGoogle2 

def getAdress(lat, lon, apiKey):
    urlRequest = 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + str(lat) + ',' + str(lon) +  '&key='+apiKey
    data=requests.get(urlRequest).json()
    answer = data['results'][0]
    output = {
                "formatted_address" : answer.get('formatted_address'),
                "type": ",".join(answer.get('types')),
                "postcode": ",".join([x['long_name'] for x in answer.get('address_components') 
                                      if 'postal_code' in x.get('types')]),
            }
    pp.pprint(answer)
    return(output)
    
#Liste der Adresse und PLZ erstellen
for index, row in df.iterrows():
    myAdress = getAdress(row['LAT'],row['LON'],apiKeyChanger(counter))
    counter +=1
    liZipCode.append(myAdress['postcode'])
    liAdress.append(myAdress['formatted_address'].split(splitter)[0])

#
liZipCode = pd.Series(liZipCode, name = 'ZipCode')
liAdress = pd.Series(liAdress, name = 'Adress')

df = pd.concat([df,liZipCode, liAdress], axis=1, join_axes=[df.index])

writer=pd.ExcelWriter('HaltestellenInklPLZ.xlsx')
df.to_excel(writer, index=False)
writer.save()

print ('======================================!DONE!======================================')
